{"ast":null,"code":"var _jsxFileName = \"/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/components/Search/index.jsx\";\n// import axios from 'axios';\nimport PubSub from 'pubsub-js';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = async () => {\n      console.log('start pulish');\n      const {\n        keyWordElement: {\n          value: keyword\n        }\n      } = this;\n      PubSub.publish('github_status', {\n        isFirst: false,\n        isLoading: true\n      }); // // get user input\n      // // console.log(this.keyWordElement.value)\n      // // const {value} = this.keyWordElement\n      // const {keyWordElement:{value}} = this\n      // // notify list to update status\n      // // this.props.updateAppState({isFirst:false,isLoading:true})\n      // // send request\n      // axios.get(`https://api.github.com/search/users?q=${keyword}`).then(\n      //     response => {\n      //         PubSub.publish('github_status', {isLoading:false,users:response.data.items})\n      //         // this.props.updateAppState({isLoading:false,users:response.data.items})\n      //     },\n      //     error => {\n      //         PubSub.publish('github_status', {isLoading:false,err:error.message})\n      //         // this.props.updateAppState({isLoading:false,err:error.message})\n      //     }\n      // )\n      // fetch requst\n      // fetch(`https://api.github.com/search/users?q=${keyword}`).then(\n      //     response => {\n      //         console.log('connect server success', response)\n      //         return response.json()},\n      //     // error => {\n      //     //     console.log('connect server fail', error)\n      //     //     return new Promise(()=>{})\n      //     // }\n      // ).then(\n      //     response => {\n      //         console.log('get data success', response)\n      //     },\n      //     // error => {console.log('get data fail', error)}\n      // ).catch (\n      //     error=> {console.log('request error', error)}\n      // )\n\n      try {\n        const response = await fetch(`https://api.github.com/search/users?q=${keyword}`);\n        const data = await response.json();\n        PubSub.publish('github_status', {\n          isLoading: false,\n          users: data\n        });\n        console.log(data);\n      } catch (error) {\n        PubSub.publish('github_status', {\n          isLoading: false,\n          err: error.message\n        });\n        console.log('request error', error);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"Search Github Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"enter the name you search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["PubSub","React","Component","Search","search","console","log","keyWordElement","value","keyword","publish","isFirst","isLoading","response","fetch","data","json","users","error","err","message","render","c"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/components/Search/index.jsx"],"sourcesContent":["// import axios from 'axios';\nimport PubSub from 'pubsub-js';\nimport React, { Component } from 'react'\n\nexport default class Search extends Component {\n\n    search = async() => {\n        console.log('start pulish')\n        const {keyWordElement:{value:keyword}} = this\n        PubSub.publish('github_status', {isFirst:false,isLoading:true})\n        // // get user input\n        // // console.log(this.keyWordElement.value)\n        // // const {value} = this.keyWordElement\n        // const {keyWordElement:{value}} = this\n        // // notify list to update status\n        // // this.props.updateAppState({isFirst:false,isLoading:true})\n        // // send request\n        // axios.get(`https://api.github.com/search/users?q=${keyword}`).then(\n        //     response => {\n        //         PubSub.publish('github_status', {isLoading:false,users:response.data.items})\n        //         // this.props.updateAppState({isLoading:false,users:response.data.items})\n        //     },\n        //     error => {\n        //         PubSub.publish('github_status', {isLoading:false,err:error.message})\n        //         // this.props.updateAppState({isLoading:false,err:error.message})\n        //     }\n        // )\n\n        // fetch requst\n        // fetch(`https://api.github.com/search/users?q=${keyword}`).then(\n        //     response => {\n        //         console.log('connect server success', response)\n        //         return response.json()},\n        //     // error => {\n        //     //     console.log('connect server fail', error)\n        //     //     return new Promise(()=>{})\n        //     // }\n        // ).then(\n        //     response => {\n        //         console.log('get data success', response)\n        //     },\n        //     // error => {console.log('get data fail', error)}\n        // ).catch (\n        //     error=> {console.log('request error', error)}\n        // )\n\n        try {\n            const response = await fetch(`https://api.github.com/search/users?q=${keyword}`)\n            const data = await response.json()\n            PubSub.publish('github_status', {isLoading:false,users:data})\n            console.log(data)\n        } catch (error) {\n            PubSub.publish('github_status', {isLoading:false,err:error.message})\n            console.log('request error', error)\n        }\n    }\n\n    render() {\n        return (\n            <section className=\"jumbotron\">\n                <h3 className=\"jumbotron-heading\">Search Github Users</h3>\n                <div>\n                    <input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"enter the name you search\"/>&nbsp;\n                    <button onClick={this.search}>Search</button>\n                </div>\n            </section>\n        )\n    }\n}\n"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;EAAA;IAAA;;IAAA,KAE1CE,MAF0C,GAEjC,YAAW;MAChBC,OAAO,CAACC,GAAR,CAAY,cAAZ;MACA,MAAM;QAACC,cAAc,EAAC;UAACC,KAAK,EAACC;QAAP;MAAhB,IAAmC,IAAzC;MACAT,MAAM,CAACU,OAAP,CAAe,eAAf,EAAgC;QAACC,OAAO,EAAC,KAAT;QAAeC,SAAS,EAAC;MAAzB,CAAhC,EAHgB,CAIhB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCL,OAAQ,EAAlD,CAA5B;QACA,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAhB,MAAM,CAACU,OAAP,CAAe,eAAf,EAAgC;UAACE,SAAS,EAAC,KAAX;UAAiBK,KAAK,EAACF;QAAvB,CAAhC;QACAV,OAAO,CAACC,GAAR,CAAYS,IAAZ;MACH,CALD,CAKE,OAAOG,KAAP,EAAc;QACZlB,MAAM,CAACU,OAAP,CAAe,eAAf,EAAgC;UAACE,SAAS,EAAC,KAAX;UAAiBO,GAAG,EAACD,KAAK,CAACE;QAA3B,CAAhC;QACAf,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BY,KAA7B;MACH;IACJ,CAnDyC;EAAA;;EAqD1CG,MAAM,GAAG;IACL,oBACI;MAAS,SAAS,EAAC,WAAnB;MAAA,wBACI;QAAI,SAAS,EAAC,mBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,wBACI;UAAO,GAAG,EAAEC,CAAC,IAAI,KAAKf,cAAL,GAAsBe,CAAvC;UAA0C,IAAI,EAAC,MAA/C;UAAsD,WAAW,EAAC;QAAlE;UAAA;UAAA;UAAA;QAAA,QADJ,uBAEI;UAAQ,OAAO,EAAE,KAAKlB,MAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EASH;;AA/DyC"},"metadata":{},"sourceType":"module"}