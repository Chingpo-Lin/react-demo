{"ast":null,"code":"var _jsxFileName = \"/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/containers/Person/index.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid'; // import connect for connect UI component&redux\n\nimport { connect } from 'react-redux';\nimport { createAddPersonAction } from '../../redux/actions/person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Person extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.addPerson = () => {\n      const name = this.nameNode.value;\n      const age = this.ageNode.value;\n      const personObj = {\n        id: nanoid(),\n        name,\n        age\n      };\n      this.props.addPerson(personObj);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"I am person component, above sum is \", this.props.sum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: c => this.nameNode = c,\n        type: \"text\",\n        placeholder: \"enter name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: c => this.ageNode = c,\n        type: \"text\",\n        placeholder: \"enter age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addPerson,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.people.map(p => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.name, \" -- \", p.age]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  people: state.people,\n  sum: state.count.sum\n}), {\n  addPerson: createAddPersonAction\n} // method to operate state\n)(Person);","map":{"version":3,"names":["React","Component","nanoid","connect","createAddPersonAction","Person","addPerson","name","nameNode","value","age","ageNode","personObj","id","props","render","sum","c","people","map","p","state","count"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/containers/Person/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport {nanoid} from 'nanoid'\n// import connect for connect UI component&redux\nimport {connect} from 'react-redux'\n\nimport { createAddPersonAction } from '../../redux/actions/person'\n\nclass Person extends Component {\n\n    addPerson = () => {\n        const name = this.nameNode.value\n        const age = this.ageNode.value\n        const personObj = {id:nanoid(),name,age}\n        this.props.addPerson(personObj)\n    }\n\n    render() {\n        return (\n        <div>\n            <h2>I am person component, above sum is {this.props.sum}</h2>\n            <input ref={c=>this.nameNode=c} type='text' placeholder=\"enter name\"/>\n            <input ref={c=>this.ageNode=c} type='text' placeholder=\"enter age\"/>\n            <button onClick={this.addPerson}>add</button>\n            <ul>\n                {\n                    this.props.people.map((p) => {\n                        return <li key={p.id}>{p.name} -- {p.age}</li>\n                    })\n                }\n            </ul>\n        </div>\n        )\n  }\n}\n\nexport default connect(\n    state => ({people:state.people,sum:state.count.sum}),\n    {addPerson:createAddPersonAction}// method to operate state\n)(Person)"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,QAArB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,qBAAT,QAAsC,4BAAtC;;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;EAAA;IAAA;;IAAA,KAE3BK,SAF2B,GAEf,MAAM;MACd,MAAMC,IAAI,GAAG,KAAKC,QAAL,CAAcC,KAA3B;MACA,MAAMC,GAAG,GAAG,KAAKC,OAAL,CAAaF,KAAzB;MACA,MAAMG,SAAS,GAAG;QAACC,EAAE,EAACX,MAAM,EAAV;QAAaK,IAAb;QAAkBG;MAAlB,CAAlB;MACA,KAAKI,KAAL,CAAWR,SAAX,CAAqBM,SAArB;IACH,CAP0B;EAAA;;EAS3BG,MAAM,GAAG;IACL,oBACA;MAAA,wBACI;QAAA,mDAAyC,KAAKD,KAAL,CAAWE,GAApD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,GAAG,EAAEC,CAAC,IAAE,KAAKT,QAAL,GAAcS,CAA7B;QAAgC,IAAI,EAAC,MAArC;QAA4C,WAAW,EAAC;MAAxD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,GAAG,EAAEA,CAAC,IAAE,KAAKN,OAAL,GAAaM,CAA5B;QAA+B,IAAI,EAAC,MAApC;QAA2C,WAAW,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAQ,OAAO,EAAE,KAAKX,SAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAA,UAEQ,KAAKQ,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAuBC,CAAD,IAAO;UACzB,oBAAO;YAAA,WAAgBA,CAAC,CAACb,IAAlB,UAA4Ba,CAAC,CAACV,GAA9B;UAAA,GAASU,CAAC,CAACP,EAAX;YAAA;YAAA;YAAA;UAAA,QAAP;QACH,CAFD;MAFR;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAeL;;AAzB4B;;AA4B/B,eAAeV,OAAO,CAClBkB,KAAK,KAAK;EAACH,MAAM,EAACG,KAAK,CAACH,MAAd;EAAqBF,GAAG,EAACK,KAAK,CAACC,KAAN,CAAYN;AAArC,CAAL,CADa,EAElB;EAACV,SAAS,EAACF;AAAX,CAFkB,CAEe;AAFf,CAAP,CAGbC,MAHa,CAAf"},"metadata":{},"sourceType":"module"}