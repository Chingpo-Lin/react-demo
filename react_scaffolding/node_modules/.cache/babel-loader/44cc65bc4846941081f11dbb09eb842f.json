{"ast":null,"code":"/*\n    1. used for create a reducer serve for Count component. reducer is function\n    2. reducer function will accept two params: preState, action\n*/import{INCREMENT,DECREMENT}from\"../constant\";var initState=0;// initialize state\nexport default function countReducer(){var preState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;console.log(\"countreducer@#\");// get type and data from action\nvar type=action.type,data=action.data;// type decide how to change data\nswitch(type){case INCREMENT:// if add \nreturn preState+data;case DECREMENT:// if minus\nreturn preState-data;default:return preState;}}","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","console","log","type","data"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/redux/reducers/count.js"],"sourcesContent":["/*\n    1. used for create a reducer serve for Count component. reducer is function\n    2. reducer function will accept two params: preState, action\n*/\nimport {INCREMENT, DECREMENT} from \"../constant\"\n\nconst initState = 0 // initialize state\n\nexport default function countReducer(preState=initState,action) {\n    console.log(\"countreducer@#\")\n    // get type and data from action\n    const {type, data} = action\n    // type decide how to change data\n    switch (type) {\n        case INCREMENT: // if add \n            return preState + data\n        case DECREMENT: // if minus\n            return preState - data\n        default:\n            return preState;\n    }\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA,EACA,OAAQA,SAAR,CAAmBC,SAAnB,KAAmC,aAAnC,CAEA,GAAMC,UAAS,CAAG,CAAlB,CAAoB;AAEpB,cAAe,SAASC,aAAT,EAAiD,IAA3BC,SAA2B,2DAAlBF,SAAkB,IAARG,OAAQ,2CAC5DC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA;AACA,GAAOC,KAAP,CAAqBH,MAArB,CAAOG,IAAP,CAAaC,IAAb,CAAqBJ,MAArB,CAAaI,IAAb,CACA;AACA,OAAQD,IAAR,EACI,IAAKR,UAAL,CAAgB;AACZ,MAAOI,SAAQ,CAAGK,IAAlB,CACJ,IAAKR,UAAL,CAAgB;AACZ,MAAOG,SAAQ,CAAGK,IAAlB,CACJ,QACI,MAAOL,SAAP,CANR,CAQH"},"metadata":{},"sourceType":"module"}