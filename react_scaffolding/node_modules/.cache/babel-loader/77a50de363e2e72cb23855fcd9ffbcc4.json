{"ast":null,"code":"var _jsxFileName = \"/Users/linbob/Desktop/code/All_Java/react/react_scaffolding/react_staging/src/App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: 'eat',\n        done: true\n      }, {\n        id: '002',\n        name: 'sleep',\n        done: true\n      }, {\n        id: '003',\n        name: 'coding',\n        done: false\n      }, {\n        id: '004',\n        name: 'shopping',\n        done: true\n      }]\n    };\n\n    this.addTodo = todoObj => {\n      console.log(todoObj.id); // get origin todos\n\n      const {\n        todos\n      } = this.state; // add a todo\n\n      const newTodos = [todoObj, ...todos]; // update state\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      //get state todo\n      const {\n        todos\n      } = this.state; // match id\n\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) {\n          return { ...todoObj,\n            done\n          };\n        } else return todoObj;\n      }); // set new state\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodo = id => {\n      // get original todos \n      const {\n        todos\n      } = this.state; // delete given id todo obj\n\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      }); // set new todo \n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.checkAllTodo = () => {\n      // get original todos\n      const {\n        todos\n      } = this.state; // operate data\n\n      const newTodos = todos.map(todoObj => {\n        return { ...todoObj,\n          done: true\n        };\n      }); // update state\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          updateTodo: this.updateTodo,\n          deleteTodo: this.deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Header","List","Footer","App","state","todos","id","name","done","addTodo","todoObj","console","log","newTodos","setState","updateTodo","map","deleteTodo","filter","checkAllTodo","render"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react_scaffolding/react_staging/src/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport Header from './components/Header'\nimport List from './components/List'\nimport Footer from './components/Footer';\n\nexport default class App extends Component {\n\n  // state come with operation on state\n\n  // initial state\n  state = {todos:[\n    {id:'001', name:'eat', done:true},\n    {id:'002', name:'sleep', done:true},\n    {id:'003', name:'coding', done:false},\n    {id:'004', name:'shopping', done:true},\n  ]}\n\n  // addToDo used to add a todo, accept a todo object\n  addTodo = (todoObj) => {\n    console.log(todoObj.id)\n    // get origin todos\n    const {todos} = this.state\n    // add a todo\n    const newTodos = [todoObj, ...todos]\n    // update state\n    this.setState({todos: newTodos})\n  }\n\n  // update todo object\n  updateTodo = (id, done) => {\n    //get state todo\n    const {todos} = this.state\n    // match id\n    const newTodos = todos.map((todoObj) => {\n      if (todoObj.id === id) {\n        return {...todoObj,done}\n      } else return todoObj\n    })\n    // set new state\n    this.setState({todos:newTodos})\n  }\n\n  // delete todo object\n  deleteTodo = (id) => {\n    // get original todos \n    const {todos} = this.state\n    // delete given id todo obj\n    const newTodos = todos.filter((todoObj) => {\n      return todoObj.id !== id\n    })\n    // set new todo \n    this.setState({todos:newTodos})\n  }\n\n  // select all\n  checkAllTodo = () => {\n    // get original todos\n    const {todos} = this.state\n    // operate data\n    const newTodos = todos.map((todoObj) => {\n      return {...todoObj, done:true}\n    })\n\n    // update state\n    this.setState({todos:newTodos})\n  }\n\n  render() {\n    const {todos} = this.state\n    return (\n      <div className=\"todo-container\">\n        <div className=\"todo-wrap\">\n          <Header addTodo={this.addTodo}/>\n          <List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo}/>\n          <Footer todos={todos}/>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}