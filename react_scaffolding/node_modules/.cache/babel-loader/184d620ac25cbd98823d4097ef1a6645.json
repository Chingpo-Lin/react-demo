{"ast":null,"code":"// import count UI component \nimport CountUI from '../../components/Count'; // import action object\n\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action'; // import connect for connect UI component&redux\n\nimport { connect } from 'react-redux';\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapStateToProps used to pass state\n */\n// const mapStateToProps = state => ({count:state})\n// /*\n//     1.return value pass to UI component as props {key:value}\n//     2.mapDispatchToProps used to pass method that operate state\n//  */\n// const mapDispatchToProps = dispatch => (\n//     {\n//         // notify redux to execute add\n//         add:number => dispatch(createIncrementAction(number)),\n//         minus:number => dispatch(createDecrementAction(number)),\n//         addAsync:(number,time) => dispatch(createIncrementAsyncAction(number,time))\n//     }\n// )\n// create and export a count container component\n\nexport default connect(state => ({\n  count: state\n}), // mapDispatchToProps normal way \n// dispatch => ({\n//         // notify redux to execute add\n//         add:number => dispatch(createIncrementAction(number)),\n//         minus:number => dispatch(createDecrementAction(number)),\n//         addAsync:(number,time) => dispatch(createIncrementAsyncAction(number,time))\n//     })\n// mapDispatchToProps concise way \n{})(CountUI);","map":{"version":3,"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","state","count"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/containers/Count/index.jsx"],"sourcesContent":["// import count UI component \nimport CountUI from '../../components/Count'\n// import action object\nimport {\n    createIncrementAction,\n    createDecrementAction,\n    createIncrementAsyncAction\n} from '../../redux/count_action'\n// import connect for connect UI component&redux\nimport {connect} from 'react-redux'\n\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapStateToProps used to pass state\n */\n// const mapStateToProps = state => ({count:state})\n\n// /*\n//     1.return value pass to UI component as props {key:value}\n//     2.mapDispatchToProps used to pass method that operate state\n//  */\n// const mapDispatchToProps = dispatch => (\n//     {\n//         // notify redux to execute add\n//         add:number => dispatch(createIncrementAction(number)),\n//         minus:number => dispatch(createDecrementAction(number)),\n//         addAsync:(number,time) => dispatch(createIncrementAsyncAction(number,time))\n//     }\n// )\n\n// create and export a count container component\nexport default connect(\n    state => ({count:state}),\n    // mapDispatchToProps normal way \n    // dispatch => ({\n    //         // notify redux to execute add\n    //         add:number => dispatch(createIncrementAction(number)),\n    //         minus:number => dispatch(createDecrementAction(number)),\n    //         addAsync:(number,time) => dispatch(createIncrementAsyncAction(number,time))\n    //     })\n\n    // mapDispatchToProps concise way \n    {\n        \n    }\n)(CountUI)\n"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,0BAHJ,QAIO,0BAJP,C,CAKA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,eAAeA,OAAO,CAClBC,KAAK,KAAK;EAACC,KAAK,EAACD;AAAP,CAAL,CADa,EAElB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,EAXkB,CAAP,CAcbL,OAda,CAAf"},"metadata":{},"sourceType":"module"}