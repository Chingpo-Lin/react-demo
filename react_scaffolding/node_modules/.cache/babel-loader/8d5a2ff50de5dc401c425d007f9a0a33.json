{"ast":null,"code":"/*\n    generate action object for count component\n*/\nimport { INCREMENT, DECREMENT } from \"../constant\"; // sync action means action value is object\n\nexport const increment = data => ({\n  type: INCREMENT,\n  data\n});\nexport const decrement = data => ({\n  type: DECREMENT,\n  data\n}); // async action means action value is function\n// call sync action incide asyn action, async action is not necessary\n\nexport const incrementAsync = (data, time) => {\n  return dispatch => {\n    setTimeout(() => {\n      // function\n      dispatch(createIncrementAction(data));\n    }, time);\n  };\n};","map":{"version":3,"names":["INCREMENT","DECREMENT","increment","data","type","decrement","incrementAsync","time","dispatch","setTimeout","createIncrementAction"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/redux/actions/count.js"],"sourcesContent":["/*\n    generate action object for count component\n*/\nimport {INCREMENT, DECREMENT} from \"../constant\"\n\n// sync action means action value is object\nexport const increment = data => ({type:INCREMENT,data})\nexport const decrement = data => ({type:DECREMENT,data})\n// async action means action value is function\n// call sync action incide asyn action, async action is not necessary\nexport const incrementAsync = (data,time) => {\n    return (dispatch) => {\n        setTimeout(() => {\n            // function\n            dispatch(createIncrementAction(data))\n        },time)\n    }\n}\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,SAAR,EAAmBC,SAAnB,QAAmC,aAAnC,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAGC,IAAI,KAAK;EAACC,IAAI,EAACJ,SAAN;EAAgBG;AAAhB,CAAL,CAAtB;AACP,OAAO,MAAME,SAAS,GAAGF,IAAI,KAAK;EAACC,IAAI,EAACH,SAAN;EAAgBE;AAAhB,CAAL,CAAtB,C,CACP;AACA;;AACA,OAAO,MAAMG,cAAc,GAAG,CAACH,IAAD,EAAMI,IAAN,KAAe;EACzC,OAAQC,QAAD,IAAc;IACjBC,UAAU,CAAC,MAAM;MACb;MACAD,QAAQ,CAACE,qBAAqB,CAACP,IAAD,CAAtB,CAAR;IACH,CAHS,EAGRI,IAHQ,CAAV;EAIH,CALD;AAMH,CAPM"},"metadata":{},"sourceType":"module"}