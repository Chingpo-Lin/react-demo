{"ast":null,"code":"/*\n    1. used for create a reducer serve for Count component. reducer is function\n    2. reducer function will accept two params: preState, action\n*/\nimport { INCREMENT, DECREMENT } from \"../constant\";\nconst initState = 0; // initialize state\n\nexport default function countReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // get type and data from action\n  const {\n    type,\n    data\n  } = action; // type decide how to change data\n\n  switch (type) {\n    case INCREMENT:\n      // if add \n      return preState + data;\n\n    case DECREMENT:\n      // if minus\n      return preState - data;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","type","data"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/redux/reducers/count.js"],"sourcesContent":["/*\n    1. used for create a reducer serve for Count component. reducer is function\n    2. reducer function will accept two params: preState, action\n*/\nimport {INCREMENT, DECREMENT} from \"../constant\"\n\nconst initState = 0 // initialize state\n\nexport default function countReducer(preState=initState,action) {\n    // get type and data from action\n    const {type, data} = action\n    // type decide how to change data\n    switch (type) {\n        case INCREMENT: // if add \n            return preState + data\n        case DECREMENT: // if minus\n            return preState - data\n        default:\n            return preState;\n    }\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAQA,SAAR,EAAmBC,SAAnB,QAAmC,aAAnC;AAEA,MAAMC,SAAS,GAAG,CAAlB,C,CAAoB;;AAEpB,eAAe,SAASC,YAAT,GAAiD;EAAA,IAA3BC,QAA2B,uEAAlBF,SAAkB;EAAA,IAARG,MAAQ;EAC5D;EACA,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAeF,MAArB,CAF4D,CAG5D;;EACA,QAAQC,IAAR;IACI,KAAKN,SAAL;MAAgB;MACZ,OAAOI,QAAQ,GAAGG,IAAlB;;IACJ,KAAKN,SAAL;MAAgB;MACZ,OAAOG,QAAQ,GAAGG,IAAlB;;IACJ;MACI,OAAOH,QAAP;EANR;AAQH"},"metadata":{},"sourceType":"module"}