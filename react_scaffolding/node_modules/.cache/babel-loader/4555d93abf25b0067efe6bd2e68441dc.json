{"ast":null,"code":"// import count UI component \nimport CountUI from '../../components/Count'; // import action object\n\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action'; // import connect for connect UI component&redux\n\nimport { connect } from 'react-redux';\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapStateToProps used to pass state\n */\n\nconst mapStateToProps = state => ({\n  count: state\n});\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapDispatchToProps used to pass method that operate state\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // notify redux to execute add\n    add: number => dispatch(createIncrementAction(number)),\n    minus: number => dispatch(createDecrementAction(number)),\n    addAsync: (number, time) => dispatch(createIncrementAsyncAction(number, time))\n  };\n} // create and export a count container component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","mapStateToProps","state","count","mapDispatchToProps","dispatch","add","number","minus","addAsync","time"],"sources":["/Users/linbob/Desktop/code/All_Java/react/react-demo/react_scaffolding/react_staging/src/containers/Count/index.jsx"],"sourcesContent":["// import count UI component \nimport CountUI from '../../components/Count'\n// import action object\nimport {\n    createIncrementAction,\n    createDecrementAction,\n    createIncrementAsyncAction\n} from '../../redux/count_action'\n// import connect for connect UI component&redux\nimport {connect} from 'react-redux'\n\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapStateToProps used to pass state\n */\nconst mapStateToProps = state => ({count:state})\n\n/*\n    1.return value pass to UI component as props {key:value}\n    2.mapDispatchToProps used to pass method that operate state\n */\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // notify redux to execute add\n        add:number => dispatch(createIncrementAction(number)),\n        minus:number => dispatch(createDecrementAction(number)),\n        addAsync:(number,time) => dispatch(createIncrementAsyncAction(number,time))\n    }\n}\n\n// create and export a count container component\nexport default connect(mapStateToProps,mapDispatchToProps)(CountUI)\n"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,0BAHJ,QAIO,0BAJP,C,CAKA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;EAACC,KAAK,EAACD;AAAP,CAAL,CAA7B;AAEA;AACA;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACH;IACAC,GAAG,EAACC,MAAM,IAAIF,QAAQ,CAACR,qBAAqB,CAACU,MAAD,CAAtB,CAFnB;IAGHC,KAAK,EAACD,MAAM,IAAIF,QAAQ,CAACP,qBAAqB,CAACS,MAAD,CAAtB,CAHrB;IAIHE,QAAQ,EAAC,CAACF,MAAD,EAAQG,IAAR,KAAiBL,QAAQ,CAACN,0BAA0B,CAACQ,MAAD,EAAQG,IAAR,CAA3B;EAJ/B,CAAP;AAMH,C,CAED;;;AACA,eAAeV,OAAO,CAACC,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CR,OAA5C,CAAf"},"metadata":{},"sourceType":"module"}